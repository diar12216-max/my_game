<!DOCTYPE html>
<html lang="fa">
<head>
<meta charset="UTF-8">
<title>🏃‍♂️ بازی فرار</title>
<script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.min.js"></script>
<style>
  body { margin: 0; overflow: hidden; background: black; }
</style>
</head>
<body>

<script>
let player;
let obstacles = [];
let score = 0;
let speed = 3;
let leftBtn, rightBtn;
let gradientShift = 0;
let gameOver = false;

function setup() {
  createCanvas(windowWidth, windowHeight);
  player = new Player();

  // ایجاد موانع
  for (let i = 0; i < 8; i++) {
    obstacles.push(new Obstacle());
  }

  // دکمه‌های لمسی
  leftBtn = new Button(width/4, height-80, 100, 60, "←");
  rightBtn = new Button(width*3/4, height-80, 100, 60, "→");
}

function draw() {
  drawBackground();

  if (!gameOver) {
    player.show();
    player.update();

    for (let obs of obstacles) {
      obs.show();
      obs.update();

      if (obs.hits(player)) {
        gameOver = true;
      }

      if (obs.y > height) {
        obs.reset();
        score += 10;

        // شرط برنده شدن در 2000 امتیاز
        if (score >= 2000) {
          gameOver = "win";
        }
      }
    }

    // نمایش امتیاز
    fill(255);
    textSize(24);
    textAlign(CENTER, TOP);
    text("امتیاز: " + score, width/2, 20);

    // دکمه‌ها
    leftBtn.show();
    rightBtn.show();
  } else {
    fill(255);
    textSize(40);
    textAlign(CENTER, CENTER);
    if (gameOver === "win") {
      text("🎉 You Win! 🎉", width/2, height/2);
    } else {
      text("💥 Game Over 💥", width/2, height/2);
    }
  }
}

function touchStarted() {
  if (leftBtn.isPressed(mouseX, mouseY)) {
    player.move(-1);
  }
  if (rightBtn.isPressed(mouseX, mouseY)) {
    player.move(1);
  }
}

function touchEnded() {
  player.move(0);
}

function drawBackground() {
  gradientShift += 0.01;
  for (let y = 0; y < height; y++) {
    let inter = map(y, 0, height, 0, 1);
    let c1 = color(50 + 50*sin(gradientShift), 0, 100 + 100*sin(gradientShift+1));
    let c2 = color(0, 100 + 100*sin(gradientShift+2), 150);
    let c = lerpColor(c1, c2, inter);
    stroke(c);
    line(0, y, width, y);
  }
}

class Player {
  constructor() {
    this.x = width/2;
    this.y = height - 150;
    this.size = 40;
    this.speed = 7;
    this.dir = 0;
  }
  show() {
    noStroke();
    fill(0, 255, 255);
    ellipse(this.x, this.y, this.size);
    fill(255, 255, 255, 100);
    ellipse(this.x - 5, this.y - 5, this.size/2);
  }
  update() {
    this.x += this.dir * this.speed;
    this.x = constrain(this.x, this.size/2, width - this.size/2);
  }
  move(direction) {
    this.dir = direction;
  }
}

class Obstacle {
  constructor() {
    this.reset();
  }
  reset() {
    this.x = random(20, width - 20);
    this.y = random(-500, -50);
    this.w = random(40, 80);
    this.h = 20;
    this.color = color(random(200,255), random(50,150), random(50,150));
  }
  show() {
    noStroke();
    fill(this.color);
    rect(this.x, this.y, this.w, this.h, 5);
  }
  update() {
    this.y += speed;
  }
  hits(player) {
    return (player.x + player.size/2 > this.x &&
            player.x - player.size/2 < this.x + this.w &&
            player.y + player.size/2 > this.y &&
            player.y - player.size/2 < this.y + this.h);
  }
}

class Button {
  constructor(x, y, w, h, label) {
    this.x = x;
    this.y = y;
    this.w = w;
    this.h = h;
    this.label = label;
  }
  show() {
    fill(100, 100, 100, 200);
    rectMode(CENTER);
    rect(this.x, this.y, this.w, this.h, 10);
    fill(255);
    textSize(32);
    textAlign(CENTER, CENTER);
    text(this.label, this.x, this.y);
  }
  isPressed(px, py) {
    return px > this.x - this.w/2 && px < this.x + this.w/2 &&
           py > this.y - this.h/2 && py < this.y + this.h/2;
  }
}
</script>
</body>
</html>